// Variables
$primary-color: #C8A27E;
$secondary-color: #8B6A4F;
$edit-color: #b26666;
$delete-color: #663333;
$background-color: #FDF6F3;
$shadow-color: rgba(0, 0, 0, 0.1);
$hover-shadow-color: rgba(0, 0, 0, 0.15);

.wrapper {
  width: 250px;
  padding: 1rem;
  background-color: white;
  border-radius: 20px;
  box-shadow: 0 4px 15px $shadow-color;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px $hover-shadow-color;

    img {
      transform: scale(1.05);
    }
  }

  // Image container
  img {
    aspect-ratio: 1;
    object-fit: cover;
    width: 100%;
    border-radius: 15px;
    background-color: grey;
    transition: transform 0.3s ease;
  }

  // Title styles
  .title {
    font-weight: 700;
    font-size: 1.1rem;
    color: $secondary-color;
    margin: 1rem 0 0.5rem;
    line-height: 1.4;
    height: 2.8em;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    line-clamp: 2;
    -webkit-box-orient: vertical;
  }

  // Price section
  .row {
    display: flex;
    align-items: center;
    gap: 0.5rem;

    &.gap-05 {
      margin: 0.5rem 0;
    }

    .price-label {
      font-weight: 400;
      font-size: 1rem;
      color: $secondary-color;
    }

    .price {
      font-weight: 600;
      font-size: 1.1rem;
      color: $primary-color;
    }
  }

  // Rating component
  .rate {
    margin: 0.5rem 0;

    ::ng-deep .p-rating {
      .p-rating-icon {
        color: $primary-color;
        font-size: 1.2rem;
        margin-right: 0.3rem;

        &.p-rating-icon-active {
          color: $primary-color;
        }
      }
    }
  }

  // Button container
  .row.gap-05 {
    margin-top: 1rem;
    gap: 0.75rem;

    button {
      flex: 1;
      padding: 0.75rem;
      border-radius: 8px;
      transition: all 0.3s ease;
      
      &:hover {
        transform: translateY(-2px);
        filter: brightness(1.1);
      }

      &:active {
        transform: translateY(0);
      }

      .p-button-icon {
        margin-right: 0.5rem;
      }
    }

    .edit {
      background-color: $edit-color;
      border: none;
      
      &:hover {
        background-color: lighten($edit-color, 5%);
      }
    }

    .p-button-danger {
      background-color: $delete-color;
      border: none;
      
      &:hover {
        background-color: lighten($delete-color, 5%);
      }
    }
  }
}

// Confirm Popup customization
::ng-deep .p-confirm-popup {
  background-color: $background-color;
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);

  .p-confirm-popup-message {
    margin: 0 0 1rem;
    color: $secondary-color;
  }

  .p-confirm-popup-footer {
    button {
      border-radius: 6px;
      padding: 0.5rem 1rem;
      
      &:first-child {
        background-color: $delete-color;
        border: none;
        
        &:hover {
          background-color: lighten($delete-color, 5%);
        }
      }
      
      &:last-child {
        background-color: transparent;
        border: 1px solid $secondary-color;
        color: $secondary-color;
        
        &:hover {
          background-color: rgba($secondary-color, 0.1);
        }
      }
    }
  }
}

// Column layout
.column {
  display: flex;
  flex-direction: column;
  
  &.gap-1 {
    gap: 1rem;
  }
}

// Responsive styles
@media (max-width: 768px) {
  .wrapper {
    width: 100%;
    max-width: 300px;
    margin: 0 auto;

    .title {
      font-size: 1rem;
    }

    .row.gap-05 button {
      padding: 0.6rem;
      font-size: 0.9rem;

      .p-button-icon {
        font-size: 0.9rem;
      }
    }
  }
}

// Optional: Add loading state
.wrapper.loading {
  pointer-events: none;
  opacity: 0.7;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    animation: loading 1.5s infinite;
  }
}

@keyframes loading {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}